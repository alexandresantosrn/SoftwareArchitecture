Model SysADLModel ; package SmartPlaceDUD { dimension Temperatura unit Celsius { dimension = Temperatura } } Requirement ExibirInterfaceWebRF ( 2 ) { text = "O sistema deve apresentar junto a uma interface web, os status dos ar-condicionados, bem como a presença de pessoas no ambiente." } Requirement MonitorarArCondicionadosRF ( 2.1 ) { text = "O sistema deve monitorar a situação dos dispositivos de ar-condicionado no ambiente, por meio dos sensores de temperatura, e retornar essa informação para a interface web." derive ExibirInterfaceWebRF ; } Requirement MonitorarPresencaRF ( 2.2 ) { text = "O sistema deve monitorar a presença e o quantitativo de pessoas na sala, através das câmeras de monitoramento e retornar essa informação para a interface web." derive ExibirInterfaceWebRF ; } Requirement ControlarAmbienteRF ( 1 ) { text = "O sistema deve permitir o controle da temperatura e luminosidade da sala, por meio de uso de sensores, possibilitando o desligamento e acionamento dos dispositivos." } Requirement VerificarPresencaRF ( 1.1 ) { text = "O sistema deve monitorar a presença de pessoas no ambiente, através do uso de sensores de presença e acionar o funcionamento e desligamento das lâmpadas e ar-condicionados do ambiente." derive ControlarAmbienteRF ; } Requirement ControlarLampadasRF ( 1.1.1 ) { text = "O sistema deve acionar o funcionamento das lâmpadas quando existirem pessoas presentes no ambiente, e acionar o seu desligamento quando não existirem pessoas presentes." derive VerificarPresencaRF ; } Requirement AumentarTemperaturaRF ( 3.1 ) { text = " sistema deve permitir o aumento da temperatura dos dispositivos de ar-condicionado, conforme acionamento por meio do leitor." derive DefinirTemperaturaRF ; } Requirement DiminuirTemperaturaRF ( 3.2 ) { text = "O sistema deve permitir a diminuição da temperatura dos dispositivos de ar-condicionado, conforme acionamento por meio do leitor." derive DefinirTemperaturaRF ; } Requirement QualidadeRNF ( 4 ) { text = "O sistema deve satisfazer preocupações com modificabilidade, escalabilidade, disponibilidade e acurácia." } Requirement ModificabilidadeRNF ( 4.1 ) { text = "O sistema deve reduzir os custos de modificações ao longo do seu ciclo de vida." derive QualidadeRNF ; } Requirement EscalabilidadeRNF ( 4.2 ) { text = "O sistema deve ter a capacidade de expandir seu campo de operação para vários ambientes." derive QualidadeRNF ; } Requirement DisponibilidadeRNF ( 4.3 ) { text = "O sistema deve estar sempre disponível, minimizando a ocorrência de interrupções." derive QualidadeRNF ; } Requirement AcuraciaRNF ( 4.4 ) { text = "O sistema deve utilizar equipamentos (câmeras e sensores) adequados para a especificidade de cada ambiente." derive QualidadeRNF ; }Requirement DefinirTemperaturaRF ( 3 ) { text = "O sistema deve permitir que os usuários definam a temperatura dos dispositivos de ar-condicionado através de um leitor de temperatura, presente na entrada da sala." Requirement ControlarArCondicionadosRF ( 1.1.2 ) { text = "O sistema deve acionar o funcionamento dos dispositivos de ar-condicionado, com o valor de temperatura estabelecido no leitor, quando existirem pessoas presentes no ambiente, e acionar o seu desligamento quando não existirem pessoas presentes." derive VerificarPresencaRF ;  } } package SmartPlaceVLD { value type Int { } value type Void { } value type Boolean { } value type String { } value type Real { } enum ComandosLuz { ligar , desligar } enum ComandosArCondicionado { ligar , desligar } } package SmartPlaceCND { } package SmartPlaceCPD { } package SmartPlacePTD { }